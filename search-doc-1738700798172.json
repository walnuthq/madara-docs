{"searchDocs":[{"title":"Overview","type":0,"sectionRef":"#","url":"/madara-docs/overview","content":"Overview What is MadaraWhat can one do with Madara / use casesWhat high-level components does it haveHow to start (probably with a quickstart tutorial)","keywords":"","version":"Next"},{"title":"Quickstart: Run a full node","type":0,"sectionRef":"#","url":"/madara-docs/quickstart/fullnode","content":"Quickstart: Run a full node","keywords":"","version":"Next"},{"title":"Architecture","type":0,"sectionRef":"#","url":"/madara-docs/chain/architecture","content":"","keywords":"","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"Architecture","url":"/madara-docs/chain/architecture#overview","content":" A Madara blockchain consists of the following components:  A gatewayA sequencerAn orchestratorNodesStarknet OS (SNOS)  Furthermore, the following parties should be present:  Users issuing transactionsA data availability layerA settlement layerA prover  ","version":"Next","tagName":"h2"},{"title":"L2 or L3​","type":1,"pageTitle":"Architecture","url":"/madara-docs/chain/architecture#l2-or-l3","content":" Madara can launch either a Starknet clone (a L2 network) or a new network on top of a Starknet network, which is also called an Application Chain (App Chain, L3). The basic functionality remains mostly the same, the main difference is the settlement layer.  ","version":"Next","tagName":"h2"},{"title":"Transaction flow​","type":1,"pageTitle":"Architecture","url":"/madara-docs/chain/architecture#transaction-flow","content":" TODO: the text is incorrect, the image is closer to reality. fix the text  When a user issues a transaction it goes through the components in the following way:  The transaction is received by the gateway and is forwarded to the orchestratorThe orchestrator assigns the transaction to the sequencerThe sequencer adds the transaction to a blockOnce a block is ready, the sequencer executes the block using Starknet OS (SNOS), which generates an execution trace and state diffs (depicting what state changes the block's transactions caused in the blockchain)The sequencer publishes the block's transaction data and state diffs to a Data Availability (DA) layer.The sequencer forwards the block's execution trace to a proverThe prover generates a cryptographic proof of correctness of the block.The proof is sent to the L1 Settlement Layer verifier contract for verification.The orchestrator monitors the L1 verifier contract and finalizes the block if the proof is valid.    What else? ","version":"Next","tagName":"h2"},{"title":"Quickstart: Run transactionss against a devnet","type":0,"sectionRef":"#","url":"/madara-docs/quickstart/devnet","content":"","keywords":"","version":"Next"},{"title":"Overview​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#overview","content":" This quick-start guide helps you start your own, local chain with Madara. Furthermore, it instructs you to deploy a contract and run transactions on the chain to verify its functionality.  The used chain is only available locally and is meant for testing purposes.  ","version":"Next","tagName":"h2"},{"title":"Installation​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#installation","content":" These installation instructions assume you are using Linux or macOS. For Windows, please utilize WSL2.  ","version":"Next","tagName":"h2"},{"title":"Install Madara CLI​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#install-madara-cli","content":" You should start by installing the main tool for running Madara, the Madara CLI:  Clone its repository with: git clone https://github.com/madara-alliance/madara-cli.gitEnter the new folder with: cd madara-clìInitialize its Git submodules with: git submodule update --init --recursive  ","version":"Next","tagName":"h3"},{"title":"Install specific tooling​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#install-specific-tooling","content":" Then continue with the specific tooling used in this tutorial (and in others):  Install Starkli CLI: Run curl https://get.starkli.sh | sh to install starkliup.Install Scarb CLI: Run curl --proto '=https' --tlsv1.2 -sSf https://docs.swmansion.com/scarb/install.sh | sh.Restart your terminal and finish installing the tools by running starkliup.  ","version":"Next","tagName":"h3"},{"title":"Run a devnet chain with Madara CLI​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#run-a-devnet-chain-with-madara-cli","content":" You are now ready to run your own Madara devnet chain. If you're not in the Madara CLI's folder, go there and run cargo run create. It will prompt you for various options. You should choose the following:  Select Madara mode: DevnetInput DB path: keep the default  It may take half an hour to prepare the image the first time. Once the devnet is ready, leave it running and open a new terminal for the rest of this tutorial.  ","version":"Next","tagName":"h2"},{"title":"Configure​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#configure","content":" ","version":"Next","tagName":"h2"},{"title":"Values to be replaced​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#values-to-be-replaced","content":" The rest of these instructions may require you to replace some of the values in the commands in the following way:  Value 0x0410c6eadd73918ea90b6658d24f5f2c828e39773819c1443d8602a3c72344c2 is used as a private key everywhere. You may choose whicheven private key from the list of keys given upon launching the devnetValue 0x07484e8e3af210b2ead47fa08c96f8d18b616169b350a8b75fe0dc4d2e01d493 is used as your public account contract address. Make sure this corresponds to the chosen private key.Value 0x043539387d5f6359716da16fbff9c1536b54c1f5928fbc4a1ea7ea71414d02ab is used as the contract's class hash value. Use the one given upon declaring the contract.Value 0x07197883a42e89ae1a057e2bc3953508558d1864b7700556f897d3520e81db24 is used as the contract's address. Use the one given upon deploying the contract.  ","version":"Next","tagName":"h3"},{"title":"Initiate a Scarb project​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#initiate-a-scarb-project","content":" You should instantiate a new Scarb project in a new folder:  mkdir madara-quickstart cd madara-quickstart scarb init --no-vcs --test-runner cairo-test   ","version":"Next","tagName":"h3"},{"title":"Configure your account and signer​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#configure-your-account-and-signer","content":" Before you can interact with the network you need an account. Luckily, running the devnet gives you a few ready accounts and their respective private keys. This is only possible because the network is a fresh network and you have full control over it - in real networks you need to get an account by different means.  However, you still need to store the account in a format understood by Starkli.  Choose an account from the list displayed upon running the devnet. Store it with:  starkli account fetch --rpc http://localhost:9944 --output ./account 0x07484e8e3af210b2ead47fa08c96f8d18b616169b350a8b75fe0dc4d2e01d493   ","version":"Next","tagName":"h3"},{"title":"Deploy a contract​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#deploy-a-contract","content":" ","version":"Next","tagName":"h2"},{"title":"Save an example contract locally​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#save-an-example-contract-locally","content":" We will use a very simple balance contract as an example. Replace the contents of src/lib.cairo with:  #[starknet::interface] trait IBalance&lt;T&gt; { // Returns the current balance. fn get(self: @T) -&gt; u128; // Increases the balance by the given amount. fn increase(ref self: T, a: u128); } #[starknet::contract] mod Balance { use traits::Into; #[storage] struct Storage { value: u128, } #[constructor] fn constructor(ref self: ContractState) { self.value.write(5); } #[abi(embed_v0)] impl Balance of super::IBalance&lt;ContractState&gt; { fn get(self: @ContractState) -&gt; u128 { self.value.read() } fn increase(ref self: ContractState, a: u128) { self.value.write( self.value.read() + a ); } } }   Next, replace the contents of Scarb.toml with:  [package] name = &quot;madara_example&quot; version = &quot;0.1.0&quot; [dependencies] starknet = &quot;=2.9.2&quot; [[target.starknet-contract]]   ","version":"Next","tagName":"h3"},{"title":"Compile the example contract​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#compile-the-example-contract","content":" Compile the contract with:  scarb build   ","version":"Next","tagName":"h3"},{"title":"Contract interaction​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#contract-interaction","content":" We are now ready to start deploying our contract and interacting with it.  ","version":"Next","tagName":"h2"},{"title":"Deploy the contract​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#deploy-the-contract","content":" Declare your contract​  Before deployment, the contract needs to be declared to the network. Declare it with:  starkli declare --rpc http://localhost:9944 --private-key 0x0410c6eadd73918ea90b6658d24f5f2c828e39773819c1443d8602a3c72344c2 --compiler-version 2.9.1 --account account ./target/dev/madara_example_Balance.contract_class.json   Note the resulting class hash.  Deploy it​  You are now ready to deploy the contract. Deploy with:  starkli deploy 0x043539387d5f6359716da16fbff9c1536b54c1f5928fbc4a1ea7ea71414d02ab --rpc http://localhost:9944 --private-key 0x0410c6eadd73918ea90b6658d24f5f2c828e39773819c1443d8602a3c72344c2 --account account   Note the resulting contract address.  ","version":"Next","tagName":"h3"},{"title":"Issue transactions​","type":1,"pageTitle":"Quickstart: Run transactionss against a devnet","url":"/madara-docs/quickstart/devnet#issue-transactions","content":" The contract keeps track of an imaginary balance. Let's first query the initial balance:  starkli call --rpc http://localhost:9944 0x07197883a42e89ae1a057e2bc3953508558d1864b7700556f897d3520e81db24 get   You should see value 5 as the initial value (prefixed by a lot of zeros).  Let's try to increase this value by a transaction. Run:  starkli invoke --account account --rpc http://localhost:9944 --private-key 0x0410c6eadd73918ea90b6658d24f5f2c828e39773819c1443d8602a3c72344c2 0x07197883a42e89ae1a057e2bc3953508558d1864b7700556f897d3520e81db24 increase 3   If you now query the balance again, you should see value 8. Congratulations, you have successfully modified the contract's state! ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}